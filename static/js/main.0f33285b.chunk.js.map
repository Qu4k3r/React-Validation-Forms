{"version":3,"sources":["reducers/clientReducer.js","reducers/index.js","store/index.js","Home.jsx","Login.jsx","actions/index.js","Register.jsx","Clients.jsx","App.jsx","index.js"],"names":["INITIAL_STATE","loggedIn","anyClients","registeredClients","clientReducer","state","type","client","rootReducer","combineReducers","extension","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","Home","to","Component","Login","this","props","htmlFor","onClick","connect","dispatch","Register","updateClientInfo","target","name","value","setState","handleClick","dispatchClient","age","email","action","onChange","min","registerClient","Clients","noClients","clientsList","map","App","exact","path","component","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f33285b.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  loggedIn: false,\n  anyClients: false,\n  registeredClients: [],\n}\n\nconst clientReducer = (state = INITIAL_STATE, { type, client }) => {\n  switch(type) {\n    case 'REGISTER_CLIENT':\n      return {\n        ...state,\n        anyClients: true,\n        registeredClients: [...state.registeredClients, client],\n      };\n    case 'VALID_LOGIN':\n      return {\n        ...state,\n        loggedIn: true,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default clientReducer;\n","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer'\n\nconst rootReducer = combineReducers({\n  clientReducer,\n})\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst extension = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nexport const store = createStore(rootReducer, extension); \n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nclass Home extends Component {\n  render() {\n    return (\n      <h1>CLIQUE <Link to=\"/login\">AQUI</Link> PARA FAZER LOGIN</h1>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logUserIn } from './actions';\n\nclass Login extends Component {\n  render() {\n    const { loggedIn } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"userLogin\">\n          Login:\n          <input type=\"email\"/>\n        </label>\n        <label htmlFor=\"userLogin\">\n          Senha:\n          <input type=\"password\"/>\n        </label>\n        <Link onClick={() => loggedIn()} to=\"/clients\">\n          <button type=\"button\">Entrar</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loggedIn: () => dispatch(logUserIn()),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const logUserIn = () => ({\n  type: 'VALID_LOGIN',\n});\n\nexport const registerClient = (client) => ({\n  type: 'REGISTER_CLIENT',\n  client,\n});\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { registerClient } from './actions';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      age: '',\n      email: '',\n    }\n  }\n\n  updateClientInfo = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleClick = () => {\n    const { dispatchClient } = this.props;\n    dispatchClient(this.state);\n    this.setState({ name: '', age: '', email: '' })\n  }\n\n  render(){\n    const { name, age, email } = this.state;\n    const newClientForm = <div>\n      <form action=\"newClient\">\n        <fieldset>\n          <legend>New client</legend>\n          <label>\n            Nome:\n            <input name=\"name\" value={ name } onChange={ this.updateClientInfo } type=\"text\"/>\n          </label>\n          <label>\n            Idade:\n            <input name=\"age\" value={ age } onChange={ this.updateClientInfo } type=\"number\" min=\"18\"/>\n          </label>\n          <label>\n            Email:\n            <input name=\"email\" value={ email } onChange={ this.updateClientInfo } type=\"email\"/>\n          </label>\n        </fieldset>\n      </form>\n      <button type=\"button\" onClick={() => {\n        this.handleClick()\n      }}>Registrar</button>\n      <Link to=\"/login\">Fazer login</Link>\n    </div>\n    return newClientForm;\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchClient: (client) => dispatch(registerClient(client)) \n});\n\nexport default connect(null, mapDispatchToProps)(Register);\n\n// pagina para o admin cadastrar novos clientes\n// devera conter o forms para cadastro\n// deve conter a mensagem \"login nao efetuado\" em caso de entrar na pagina pela url (fazer props pra tratar isso)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Clients extends Component {\n  render() {\n    const { anyClients, loggedIn,  registeredClients } = this.props;\n    const noClients = <div>Não há clientes cadastrados</div>\n    const clientsList = <ul>\n      { registeredClients.map(({ name }) => <li>{name}</li>) }\n    </ul>\n    const clientNotLoggedIn = <div>Login não efetuado</div>\n    if(!loggedIn) return clientNotLoggedIn;\n    return anyClients ? clientsList : noClients;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.clientReducer.loggedIn,\n  registeredClients: state.clientReducer.registeredClients,\n  anyClients: state.clientReducer.anyClients,\n});\n\nexport default connect(mapStateToProps, null)(Clients);\n\n\n// aqui tera a lista de clientes cadastrados ou a mensagem \"nao ha clientes cadastrados\"\n// deve conter a mensagem \"login nao efetuado\" em caso de entrar na pagina pela url (fazer props pra tratar isso)\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Login from './Login';\nimport Register from './Register';\nimport Clients from './Clients';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/clients\" component={Clients} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}